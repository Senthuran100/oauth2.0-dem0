{"version":3,"sources":["components/Home.js","components/Login.js","store/reducer/index.js","App.js","index.js"],"names":["Home","useContext","AuthContext","state","dispatch","isLoggedIn","to","user","avatar_url","name","public_repos","followers","following","Wrapper","className","onClick","type","src","alt","Styled","section","Login","useState","errorMessage","isLoading","data","setData","client_id","redirect_uri","client_secret","useEffect","url","window","location","href","hasCode","includes","console","log","newUrl","split","history","pushState","requestData","code","token_data","FormData","append","fetch","method","headers","mode","body","then","response","text","access_token","URLSearchParams","get","Authorization","catch","error","initialState","JSON","parse","localStorage","getItem","process","proxy_url","reducer","action","setItem","stringify","payload","clear","createContext","App","useReducer","Provider","value","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eed3762c.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport Styled from \"styled-components\";\nimport { AuthContext } from \"../App\";\n\n\nexport default function Home() {\n  const { state, dispatch } = useContext(AuthContext);\n\n  if (!state.isLoggedIn) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  const { avatar_url, name, public_repos, followers, following } = state.user\n\n  const handleLogout = () => {\n    dispatch({\n      type: \"LOGOUT\"\n    });\n  } \n\n  return (\n    <Wrapper>\n      <div className=\"container\">\n        <button onClick={()=> handleLogout()}>Logout</button>\n        <div>\n          <div className=\"content\">\n            <img src={avatar_url} alt=\"Avatar\"/>\n            <span>{name}</span>\n            <span>{public_repos} Repos</span>\n            <span>{followers} Followers</span>\n            <span>{following} Following</span>\n          </div>\n        </div>\n      </div>\n    </Wrapper>\n  );\n}\n\nconst Wrapper = Styled.section`\n.container{\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  font-family: Arial;\n\n  button{\n    all: unset;\n    width: 100px;\n    height: 35px;\n    margin: 10px 10px 0 0;\n    align-self: flex-end;\n    background-color: #0041C2;\n    color: #fff;\n    text-align: center;\n    border-radius: 3px;\n    border: 1px solid #0041C2;\n\n    &:hover{\n      background-color: #fff;\n      color: #0041C2;\n    }\n  }\n\n  >div{\n    height: 100%;\n    width: 100%;\n    display: flex;\n    font-size: 18px;\n    justify-content: center;\n    align-items: center;\n\n    .content{\n      display: flex;\n      flex-direction: column;\n      padding: 20px 100px;    \n      box-shadow: 0 1px 4px 0 rgba(0, 0, 0, 0.2);\n      width: auto;\n  \n      img{\n        height: 150px;\n        width: 150px;\n        border-radius: 50%;\n      }\n  \n      >span:nth-child(2){\n        margin-top: 20px;\n        font-weight: bold;\n      }\n  \n      >span:not(:nth-child(2)){\n        margin-top: 8px;\n        font-size: 14px;\n      }\n  \n    }\n\n  }\n}\n`;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport Styled from \"styled-components\";\nimport GithubIcon from \"mdi-react/GithubIcon\";\nimport { AuthContext } from \"../App\";\nimport fetch from 'node-fetch';\n\n\n// const FormData = require(\"form-data\");\n\nexport default function Login() {\n  const { state, dispatch } = useContext(AuthContext);\n  const [data, setData] = useState({ errorMessage: \"\", isLoading: false });\n\n  const { client_id, redirect_uri, client_secret } = state;\n\n  useEffect(() => {\n    // After requesting Github access, Github redirects back to your app with a code parameter\n    const url = window.location.href;\n    const hasCode = url.includes(\"?code=\");\n  console.log(\"Method1\");\n    // If Github API returns the code parameter\n    if (hasCode) {\n      const newUrl = url.split(\"?code=\");\n      window.history.pushState({}, null, newUrl[0]);\n      setData({ ...data, isLoading: true });\n      console.log(\"Method2\");\n\n      const requestData = {\n        code: newUrl[1]\n      };\n\n      // const proxy_url = state.proxy_url;\n\n      // const token_data = new FormData();\n      // token_data.append(\"client_id\", client_id);\n      // token_data.append(\"client_secret\", client_secret);\n      // token_data.append(\"code\", requestData.code);\n      // token_data.append(\"redirect_uri\", redirect_uri);\n\n\n     \n      const URL = \"https://github.com/login/oauth/access_token\";\n      // Use code parameter and other parameters to make POST request to proxy_server\n      const token_data = new FormData();\n      token_data.append(\"client_id\", client_id);\n      token_data.append(\"client_secret\", client_secret);\n      token_data.append(\"code\", requestData.code);\n      token_data.append(\"redirect_uri\", redirect_uri);\n      console.log(\"Method3\",token_data);\n      fetch(URL, {\n        method: \"POST\",\n        headers:{'Access-Control-Allow-Origin':'*','Accept': 'application/json',\n        'Content-Type':'application/json'\n      },\n        mode: 'no-cors',\n        body: token_data,\n      })\n        .then((response) => {\n          console.log('response',response.text());\n          \n          response.text()})\n        .then((response) => {\n          console.log('paramsString',response);\n          let params = new URLSearchParams(response);\n          const access_token = params.get(\"access_token\");\n          console.log('Access Token',access_token);\n          // Request to return data of a user that has been authenticated\n          return fetch(`https://api.github.com/user`, {\n            headers: {\n              Authorization: `token ${access_token}`,\n            },\n          });\n        })\n        \n        // .then((response) => response.json())\n        // .then((response) => {\n        //   return res.status(200).json(response);\n        // })\n        // .catch((error) => {\n        //   return res.status(400).json(error);\n        // });\n        // .then(response => response.json())\n        // .then(data => {\n        //   dispatch({\n        //     type: \"LOGIN\",\n        //     payload: { user: data, isLoggedIn: true }\n        //   });\n        // })\n\n        .catch(error => {\n          console.log('Error',error);\n          setData({\n            isLoading: false,\n            errorMessage: \"Sorry! Login failed\"\n          });\n        });\n    }\n  }, [state, dispatch, data]);\n\n  if (state.isLoggedIn) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <Wrapper>\n      <section className=\"container\">\n        <div>\n          <h1>Welcome</h1>\n          <span>Super amazing app</span>\n          <span>{data.errorMessage}</span>\n          <div className=\"login-container\">\n            {data.isLoading ? (\n              <div className=\"loader-container\">\n                <div className=\"loader\"></div>\n              </div>\n            ) : (\n              <>\n                {\n                  // Link to request GitHub access\n                }\n                <a\n                  className=\"login-link\"\n                  href={`https://github.com/login/oauth/authorize?scope=user&client_id=${client_id}&redirect_uri=${redirect_uri}`}\n                  onClick={() => {\n                    setData({ ...data, errorMessage: \"\" });\n                  }}\n                >\n                  <GithubIcon />\n                  <span>Login with GitHub</span>\n                </a>\n              </>\n            )}\n          </div>\n        </div>\n      </section>\n    </Wrapper>\n  );\n}\n\nconst Wrapper = Styled.section`\n  .container {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100vh;\n    font-family: Arial;\n    \n\n    > div:nth-child(1) {\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      box-shadow: 0 1px 4px 0 rgba(0, 0, 0, 0.2);\n      transition: 0.3s;\n      width: 25%;\n      height: 45%;\n\n      > h1 {\n        font-size: 2rem;\n        margin-bottom: 20px;\n      }\n\n      > span:nth-child(2) {\n        font-size: 1.1rem;\n        color: #808080;\n        margin-bottom: 70px;\n      }\n\n      > span:nth-child(3) {\n        margin: 10px 0 20px;\n        color: red;\n      }\n\n      .login-container {\n        background-color: #000;\n        width: 70%;\n        border-radius: 3px;\n        color: #fff;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n\n        > .login-link {\n          text-decoration: none;\n          color: #fff;\n          text-transform: uppercase;\n          cursor: default;\n          display: flex;\n          align-items: center;          \n          height: 40px;\n\n          > span:nth-child(2) {\n            margin-left: 5px;\n          }\n        }\n\n        .loader-container {\n          display: flex;\n          justify-content: center;\n          align-items: center;          \n          height: 40px;\n        }\n\n        .loader {\n          border: 4px solid #f3f3f3;\n          border-top: 4px solid #3498db;\n          border-radius: 50%;\n          width: 12px;\n          height: 12px;\n          animation: spin 2s linear infinite;\n        }\n\n        @keyframes spin {\n          0% {\n            transform: rotate(0deg);\n          }\n          100% {\n            transform: rotate(360deg);\n          }\n        }\n      }\n    }\n  }\n`;\n","export const initialState = {\n  isLoggedIn: JSON.parse(localStorage.getItem(\"isLoggedIn\")) || false,\n  user: JSON.parse(localStorage.getItem(\"user\")) || null,\n  client_id: process.env.REACT_APP_CLIENT_ID,\n  redirect_uri: process.env.REACT_APP_REDIRECT_URI,\n  client_secret: process.env.REACT_APP_CLIENT_SECRET,\n  proxy_url: process.env.REACT_APP_PROXY_URL\n};\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case \"LOGIN\": {\n      localStorage.setItem(\"isLoggedIn\", JSON.stringify(action.payload.isLoggedIn))\n      localStorage.setItem(\"user\", JSON.stringify(action.payload.user))\n      return {\n        ...state,\n        isLoggedIn: action.payload.isLoggedIn,\n        user: action.payload.user\n      };\n    }\n    case \"LOGOUT\": {\n      localStorage.clear()\n      return {\n        ...state,\n        isLoggedIn: false,\n        user: null\n      };\n    }\n    default:\n      return state;\n  }\n};\n","import React, { createContext, useReducer } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport Login from \"./components/Login\";\nimport { initialState, reducer } from \"./store/reducer\";\n\n\nexport const AuthContext = createContext();\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <AuthContext.Provider\n      value={{\n        state,\n        dispatch\n      }}\n    >\n    <Router>\n      <Switch>\n        <Route path=\"/login\" component={Login}/>\n        <Route path=\"/\" component={Home}/>\n      </Switch>\n    </Router>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}